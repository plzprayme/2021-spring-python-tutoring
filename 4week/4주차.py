# -*- coding: utf-8 -*-
"""4주차.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1azo0ojfNadnnQx69X-5i6titp4ctmuSx

# 4주차
## 리스트에 요소 추가하기
"""

# 가장 큰 문제점: 프로그램이 실행하고 있을 때는 추가를 할 수가 없다.

student = ['황성찬', '신현수', '송치완', '이상빈']
# student2 = ['황성찬', '신현수', '송치완', '이상빈', '권준호', '이용현']
# student3 = ['황성찬', '신현수', '송치완', '이상빈', '권준호', '이용현', '김정태']

# 프로그램이 실행 중이어도 추가를 할 수 있다.

print(f'추가하기 전: {student}')
student.append('권준호')
print(f'추가한 후 : {student}')

empty = []
print(f'추가하기 전: {empty}')
empty.append("not empty")
print(f'추가한 후 : {empty}')

append_list = [10, 20, 30]
extend_list = [10, 20, 30]

append_list.append([40, 50, 60, 70, 80, 90, 100, 110, 120])
extend_list.extend([40, 50, 60, 70, 80, 90, 100, 110, 120])

print(len(append_list))
print(len(extend_list))

insert_list = [10, 20, 30]
print(f'추가하기 전: {insert_list}')
insert_list.insert(2, 300)
print(f'추가한 후 : {insert_list}')

"""## 리스트 요소 삭제하기"""

def b(before_list):
  # y = 2x
  print(f'추가하기 전: {before_list}')

def a(x):
  # y = 3x
  print(f'추가한 후: {x}')

pop_list = [10, 20, 30]
b(pop_list) # [10. 20, 30]
pop_list.pop() # [10, 20]
a(pop_list)

pop_list2 = [10, 20, 30]
b(pop_list2)
pop_list2.pop(1)
a(pop_list2)

remove_list = [10, 20, 30]
b(remove_list)
remove_list.remove(20)
a(remove_list)

index_list = [10, 20, 30, 15, 20, 40]
print(index_list[index_list.index(10)])

count_list = [10, 20, 20, 15]
print(count_list.count(20))
print(count_list.count(0))

reverse_list = [10, 20, 30]
b(reverse_list)
reverse_list.reverse()
a(reverse_list)

sort_list = [25, 1, 14, -1, 3333, -12314]
b(sort_list)
sort_list.sort(key = lambda x: x < 10)
a(sort_list)

# 재귀 대명사
# myself

# f(x) = 2x 

# f(x) = 2x
# f(f(x)) = 2 * 2x
# f(f(f(x))) = 2 * 2 * 2x

# 7 6 5 4 3 2 1
# 6 5 4 3 2 1
# 5 4 3 2 1

# 재귀 포인트
# 종료조건
# 파라미터(매개변수)
# return 값
def factorial(x):
  if x == 1:
    return x
  return x * factorial(x-1)

print("(나는 factorial 아님)", factorial(3))
print("(나는 factorial 아님)", factorial(4))
print("(나는 factorial 아님)", factorial(5))

# 팩토리얼 5!
# 5! = 5*4*3*2*1

# 반복문으로 풀어봅시다.
answer = 1
for i in range(1, 6):
  # print(i)
  answer *= i

print(answer)

# 재귀== 반복문

"""## 함수 (Function)# x = 1"""

